{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","err","setErr","className","main","temp","d","day","getDay","getToday","Date","date","getDate","month","getMonth","year","getFullYear","dateBuilder","name","sys","country","condition","icon","getWeatherIcon","Math","round","feels_like","humidity","wind","speed","type","placeholder","enterKeyHint","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","status","Error","json","result","console","log","blur","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e42a6df2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { WiDaySunny, WiRain, WiCloudy, WiThunderstorm, WiFog } from 'react-icons/wi';\nimport { IoLocationOutline } from 'react-icons/io5'\nimport './App.css';\n\nconst api = {\n  key: \"a18f2e1334c441d547d368049603798c\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n\n  const [weather, setWeather] = useState({});\n\n  const [err, setErr] = useState('');\n\n  // const [weatherIcon, setWeatherIcon] = useState\n\n\n\n\n  function search(evt) {\n     if(evt.key === 'Enter') {\n       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        \n       .then((res) => {\n          if (res.status === 404) {\n            throw new Error(\"I didn't find this city. Please try again!\");\n          } \n          else {\n            setErr(null);\n            return res.json();\n          }\n        })\n\n        .then(\n          (result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        }),\n        (err) => setErr(err)\n        );\n        evt.target.blur();\n     }\n  }\n\n\n\n\n\n\n//   function search(evt) {\n//     if(evt.key === 'Enter') {\n//       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n//        .then(res => res.json())\n//        .then(result => {\n//          setWeather(result);\n//          setQuery('');\n//          console.log(result);\n//        });\n//        evt.target.blur();\n//     }\n//  }\n\n\n\n\n\n\n\n\n\n\n  function dateBuilder(d) {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    let fulldate = `${date} ${month} ${year}`;\n\n    return fulldate;\n  }\n\n  function getToday(d) {\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n\n    return `${day}`\n\n  }\n\n  function getWeatherIcon(condition) {\n\n    let icon = null;\n\n    switch (condition) {\n      case 'Clouds':\n        icon = <WiCloudy className=\"weather-icon\" />;\n        break;\n\n      case 'Clear':\n        icon = <WiDaySunny className=\"weather-icon\" />;\n        break;\n\n      case 'Mist':\n        icon = <WiFog className=\"weather-icon\" />;\n        break;\n\n      case 'Rain':\n        icon = <WiRain className=\"weather-icon\" />;\n        break;\n\n      case 'Thunderstorm':\n        icon = <WiThunderstorm className=\"weather-icon\" />;\n        break;\n\n      default:\n        icon = <WiDaySunny className=\"weather-icon\" />;\n        break;\n      }\n\n      return icon;\n  }\n\n\n\n  return (\n    <>\n    <div className=\"app-name\">WEATHER</div>\n    <div className=\"app\">\n\n      <div className={\n        (typeof weather.main != 'undefined') ? ((weather.main.temp > 16) ? \n        'weather-side warm' : 'weather-side') \n        : 'weather-side'}>\n        {(typeof weather.main != 'undefined') ? (\n            <div className={\n              (typeof weather.main != 'undefined') ? ((weather.main.temp > 16) ? \n              'weather-gradient warm' : 'weather-gradient') \n              : 'weather-gradient'}>\n\n              <div className=\"date-container\">\n\n                  <div className=\"day\">\n                  {getToday(new Date())}\n                  </div>\n                  \n\n                  <div className=\"date\">\n                  {dateBuilder(new Date())}\n                  </div>\n                  \n\n                  <div className=\"location\">\n                  <IoLocationOutline className=\"location-icon\" />\n                    {`${weather.name}, \n                    ${weather.sys.country}`}\n\n                   \n                  </div>\n\n              </div>\n\n              <div className=\"weather-container\">\n\n                {getWeatherIcon(weather.weather[0].main)}\n                <div className=\"weather-temp\">\n                  {Math.round(weather.main.temp)}°c\n                </div>\n\n                <div className=\"weather-desc\">\n                  {weather.weather[0].main}\n                </div>\n\n              </div>\n\n           </div>\n        ) : ('')}\n\n      </div>\n\n      <div className=\"info-side\">\n\n        \n\n          <div className=\"today-info-container\">\n          {(typeof weather.main != 'undefined') ? (\n            <div className=\"today-info\">\n\n              <div className=\"feels-like\">\n                <span className=\"title\">FEELS LIKE</span>\n                <span className=\"value\">{Math.round(weather.main.feels_like)}°C</span>\n              </div>\n\n              <br/>\n\n              <div className=\"humidity\">\n                <span className=\"title\">HUMIDITY</span>\n                <span className=\"value\">{weather.main.humidity}%</span>\n              </div>\n\n              <br/>\n\n              <div className=\"wind\">\n                <span className=\"title\">WIND</span>\n                <span className=\"value\">{weather.wind.speed} km/h</span>\n              </div>\n\n            </div>\n            \n            ) : ('')}\n            \n          </div>\n\n            \n          \n          <div className=\"location-box\">\n            <input \n            type=\"text\"\n            className=\"searchbar\"\n            placeholder=\"Enter City...\"\n            enterKeyHint=\"search\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search }\n            err = {err}\n            />\n          </div>\n          \n          \n\n      </div>\n      \n    </div>\n            \n    <footer className=\"footer\">\n      Simple Weather Application made by Gino Swanepoel <br/>\n      © All rights reserved.\n    </footer>\n\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}